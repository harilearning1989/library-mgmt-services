CREATE TABLE LIBRARY_MGMT.STUDENT (
    ID int NOT NULL AUTO_INCREMENT,
    STUDENT_ID int,
    STUDENT_NAME varchar(255),
    FATHER_NAME varchar(255),
    GENDER varchar(10),
    MOBILE long,
    CATEGORY varchar(10),
    PRIMARY KEY (ID)
);

CREATE TABLE LIBRARY_MGMT.`books` (
    `id` int NOT NULL AUTO_INCREMENT,
    `book_name` varchar(255) DEFAULT NULL,
    `book_quantity` int DEFAULT NULL,
    `created_date` datetime DEFAULT NULL,
    AVAIL_BOOKS int,
    AUTHORS varchar(500) DEFAULT NULL,
    CATEGORIES varchar(500) DEFAULT NULL,
    `isbn` varchar(255) DEFAULT NULL,
    `long_description` varchar(510) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
    `page_count` int DEFAULT NULL,
    `price` int DEFAULT NULL,
    `published_date` varchar(255) DEFAULT NULL,
    `short_description` varchar(510) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
    `status` varchar(255) DEFAULT NULL,
    `subject` varchar(255) DEFAULT NULL,
    `thumbnail_url` varchar(255) DEFAULT NULL,
    `updated_date` datetime DEFAULT NULL,
    PRIMARY KEY (`id`)
);

CREATE TABLE LIBRARY_MGMT.BOOKS_TEMP (
    ID int(11) NOT NULL AUTO_INCREMENT,
    BOOK_ID int,
    BOOK_NAME varchar(50),
    AUTHOR_NAME varchar(50),
    PUBLISHED VARCHAR(50),
    BOOK_QUANTITY INT,
    PRICE INT,
    PAGES INT,
    EDITION INT,
    CREATED_DATE DATE,
    UPDATED_DATE DATE,
    subject varchar(20),
    PRIMARY KEY (ID)
);


CREATE TABLE LIBRARY_MGMT.`ISSUED_BOOKS` (
    `ID` int NOT NULL AUTO_INCREMENT,
    `STUDENT_ID` int DEFAULT NULL,
    `BOOK_ID` int DEFAULT NULL,
    `ISSUED_DATE` date DEFAULT NULL,
    `PERIOD` int DEFAULT NULL,
    `DURATION` varchar(10) NOT NULL,
    `ISSUED_BOOK_COUNT` int DEFAULT NULL,
    PRIMARY KEY (`ID`),
    KEY `ISSUED_BOOKS_STUDENT_ID_FK` (`STUDENT_ID`),
    KEY `ISSUED_BOOKS_BOOK_ID_FK` (`BOOK_ID`),
    CONSTRAINT `ISSUED_BOOKS_BOOK_ID_FK` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOKS` (`id`),
    CONSTRAINT `ISSUED_BOOKS_STUDENT_ID_FK` FOREIGN KEY (`STUDENT_ID`) REFERENCES `STUDENT` (`id`)
);

CREATE TABLE LIBRARY_MGMT.`RETURNED_BOOKS` (
    `rid` int NOT NULL AUTO_INCREMENT,
    `BOOK_ID` int NOT NULL,
    `STUDENT_ID` int NOT NULL,
    `return_date` date NOT NULL,
    `fine` int NOT NULL DEFAULT '0',
    PRIMARY KEY (`rid`),
    KEY `RETURNED_BOOKS_STUDENT_ID_FK` (`STUDENT_ID`),
    KEY `RETURNED_BOOKS_BOOK_ID_FK` (`BOOK_ID`),
    CONSTRAINT `RETURNED_BOOKS_BOOK_ID_FK` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOKS` (`id`),
    CONSTRAINT `RETURNED_BOOKS_STUDENT_ID_FK` FOREIGN KEY (`STUDENT_ID`) REFERENCES `STUDENT` (`id`)
);

CREATE TABLE `users` (
    `UID` int(11) NOT NULL AUTO_INCREMENT,
    `USERNAME` varchar(30) NOT NULL,
    `PASSWORD` varchar(30) NOT NULL,
    `USER_TYPE` int(11) NOT NULL,
    PRIMARY KEY (`UID`)
);

INSERT INTO USERS(USERNAME,PASSWORD,USER_TYPE) VALUES ('admin','admin',1);
commit;

--===============Ignore below==============

CREATE TABLE LIBRARY_MGMT.STUDENT (
    ID int NOT NULL,
    STUDENT_ID int,
    STUDENT_NAME varchar(255),
    FATHER_NAME varchar(255),
    GENDER varchar(10),
    MOBILE long,
    CATEGORY varchar(10),
    PRIMARY KEY (ID)
);

CREATE TABLE LIBRARY_MGMT.BOOKS_TEMP (
    ID int(11) NOT NULL AUTO_INCREMENT,
    BOOK_ID int,
    BOOK_NAME varchar(50),
    AUTHOR_NAME varchar(50),
    PUBLISHED VARCHAR(50),
    BOOK_QUANTITY INT,
    PRICE INT,
    PAGES INT,
    EDITION INT,
    CREATED_DATE DATE,
    UPDATED_DATE DATE,
    subject varchar(20),
    PRIMARY KEY (ID)
);

CREATE TABLE LIBRARY_MGMT.`books` (
    `id` int NOT NULL AUTO_INCREMENT,
    `book_name` varchar(255) DEFAULT NULL,
    `book_quantity` int DEFAULT NULL,
    `created_date` datetime DEFAULT NULL,
    AUTHORS varchar(500) DEFAULT NULL,
    CATEGORIES varchar(500) DEFAULT NULL,
    `isbn` varchar(255) DEFAULT NULL,
    `long_description` varchar(510) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
    `page_count` int DEFAULT NULL,
    `price` int DEFAULT NULL,
    `published_date` varchar(255) DEFAULT NULL,
    `short_description` varchar(510) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
    `status` varchar(255) DEFAULT NULL,
    `subject` varchar(255) DEFAULT NULL,
    `thumbnail_url` varchar(255) DEFAULT NULL,
    `updated_date` datetime DEFAULT NULL,
    PRIMARY KEY (`id`)
);

ALTER TABLE LIBRARY_MGMT.`books`
    ADD AVAIL_BOOKS varchar(255);

CREATE TABLE LIBRARY_MGMT.`ISSUED_BOOKS` (
`ID` int(11) NOT NULL AUTO_INCREMENT,
`STUDENT_ID` int,
`BOOK_ID` int,
`ISSUED_DATE` DATE,
`PERIOD` int,
`DURATION` varchar(10) NOT NULL,
PRIMARY KEY (`ID`),
CONSTRAINT `ISSUED_BOOKS_STUDENT_ID_FK` FOREIGN KEY (`STUDENT_ID`) REFERENCES `STUDENT` (`STUDENT_ID`),
CONSTRAINT `ISSUED_BOOKS_BOOK_ID_FK` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOKS` (`ID`)
);

CREATE TABLE LIBRARY_MGMT.`ISSUED_BOOKS` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `STUDENT_ID` int DEFAULT NULL,
  `BOOK_ID` int DEFAULT NULL,
  `ISSUED_DATE` date DEFAULT NULL,
  `PERIOD` int DEFAULT NULL,
  `DURATION` varchar(10) NOT NULL,
  `ISSUED_BOOK_COUNT` int DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `ISSUED_BOOKS_STUDENT_ID_FK` (`STUDENT_ID`),
  KEY `ISSUED_BOOKS_BOOK_ID_FK` (`BOOK_ID`),
  CONSTRAINT `ISSUED_BOOKS_BOOK_ID_FK` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOKS` (`id`),
  CONSTRAINT `ISSUED_BOOKS_STUDENT_ID_FK` FOREIGN KEY (`STUDENT_ID`) REFERENCES `STUDENT` (`STUDENT_ID`)
)

CREATE TABLE LIBRARY_MGMT.`RETURNED_BOOKS` (
  `rid` int NOT NULL AUTO_INCREMENT,
  `BOOK_ID` int NOT NULL,
  `STUDENT_ID` int NOT NULL,
  `return_date` date NOT NULL,
  `fine` int NOT NULL DEFAULT '0',
  PRIMARY KEY (`rid`),
  KEY `RETURNED_BOOKS_STUDENT_ID_FK` (`STUDENT_ID`),
  KEY `RETURNED_BOOKS_BOOK_ID_FK` (`BOOK_ID`),
  CONSTRAINT `RETURNED_BOOKS_BOOK_ID_FK` FOREIGN KEY (`BOOK_ID`) REFERENCES `BOOKS` (`id`),
  CONSTRAINT `RETURNED_BOOKS_STUDENT_ID_FK` FOREIGN KEY (`STUDENT_ID`) REFERENCES `STUDENT` (`STUDENT_ID`)
)

CREATE TABLE `users` (
`UID` int(11) NOT NULL AUTO_INCREMENT,
`USERNAME` varchar(30) NOT NULL,
`PASSWORD` varchar(30) NOT NULL,
`USER_TYPE` int(11) NOT NULL,
PRIMARY KEY (`UID`)
);

INSERT INTO USERS(USERNAME,PASSWORD,USER_TYPE) VALUES (“admin”,”admin”,1)